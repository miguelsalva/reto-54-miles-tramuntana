name: Check Summits Count

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  check-summits:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run summit check script
      run: |
        #!/bin/bash
        # Count the number of summits for each person, excluding the final summary
        file="README.md"
        # Extract the lines with summit counts and exclude the final summary lines
        summit_lines=$(sed -n '/^[0-9]*| /p' $file | sed '/MS -/Q')
        
        ms_count=$(echo "$summit_lines" | grep -o "‚úÖ" | wc -l)
        cm_count=$(echo "$summit_lines" | grep -o "ü•ã" | wc -l)
        mm_count=$(echo "$summit_lines" | grep -o "üê®" | wc -l)
        jc_count=$(echo "$summit_lines" | grep -o "‚òëÔ∏è" | wc -l)

        # Get the declared number of summits from the end of the file
        declared_ms=$(grep "MS -" $file | awk -F '- ' '{print $2}' | sed 's/<br>//' | xargs)
        declared_cm=$(grep "CM -" $file | awk -F '- ' '{print $2}' | sed 's/<br>//' | xargs)
        declared_mm=$(grep "MM -" $file | awk -F '- ' '{print $2}' | sed 's/<br>//' | xargs)
        declared_jc=$(grep "JC -" $file | awk -F '- ' '{print $2}' | sed 's/<br>//' | xargs)

        # Print declared values for debugging
        echo "Declared MS: $declared_ms"
        echo "Declared CM: $declared_cm"
        echo "Declared MM: $declared_mm"
        echo "Declared JC: $declared_jc"

        # Ensure the declared values are integers
        if ! [[ "$declared_ms" =~ ^[0-9]+$ ]]; then
          echo -e "\033[31mError: Declared MS value ($declared_ms) is not an integer\033[0m"
          exit 1
        fi

        if ! [[ "$declared_cm" =~ ^[0-9]+$ ]]; then
          echo -e "\033[31mError: Declared CM value ($declared_cm) is not an integer\033[0m"
          exit 1
        fi

        if ! [[ "$declared_mm" =~ ^[0-9]+$ ]]; then
          echo -e "\033[31mError: Declared MM value ($declared_mm) is not an integer\033[0m"
          exit 1
        fi

        if ! [[ "$declared_jc" =~ ^[0-9]+$ ]]; then
          echo -e "\033[31mError: Declared JC value ($declared_jc) is not an integer\033[0m"
          exit 1
        fi

        # Check if the counts match
        if [ "$ms_count" -ne "$declared_ms" ]; then
          echo -e "\033[31mMismatch for MS: Found $ms_count, but declared $declared_ms\033[0m"
          exit 1
        fi

        if [ "$cm_count" -ne "$declared_cm" ]; then
          echo -e "\033[31mMismatch for CM: Found $cm_count, but declared $declared_cm\033[0m"
          exit 1
        fi

        if [ "$mm_count" -ne "$declared_mm" ]; then
          echo -e "\033[31mMismatch for MM: Found $mm_count, but declared $declared_mm\033[0m"
          exit 1
        fi

        if [ "$jc_count" -ne "$declared_jc" ]; then
          echo -e "\033[31mMismatch for JC: Found $jc_count, but declared $declared_jc\033[0m"
          exit 1
        fi

        echo -e "\033[32mAll counts match the declared numbers.\033[0m"
        exit 0
